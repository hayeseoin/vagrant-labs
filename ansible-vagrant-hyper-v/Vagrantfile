Vagrant.configure("2") do |config|
  config.vm.network "public_network", bridge: "Default Switch"
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # Setup file for the VMs
  vm_settings = [ 
    {   
      name: "al2023-ansible-test",
      user_name: "ec2-user",
      box: "hayeseoin/al2023-hyperv",
      memory: 1024, 
      cpus: 1,
      ansible_install: "dnf install -y ansible",
      ansible_playbook: "/tmp/playbook.yml"
    }
  ]

  # Copy your public key to somewhere in your Windows filesystem
  # VAGRANT_PROVISIONED_SSH_KEY is a **Powershell** environment variable 
  local_ssh_key = File.expand_path(ENV['VAGRANT_PROVISIONED_SSH_KEY'], __dir__)
  def create_user_shell(username)
    <<-SHELL
      useradd -m -s /bin/bash #{username}
      mkdir -p /home/#{username}/.ssh
      cp /home/vagrant/id_rsa.pub /home/#{username}/.ssh/authorized_keys
      chown -R #{username}:#{username} /home/#{username}/.ssh
      chmod 700 /home/#{username}/.ssh
      chmod 600 /home/#{username}/.ssh/authorized_keys
      echo "#{username} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/#{username}
    SHELL
  end
  ansible_playbook = File.expand_path("./playbook.yml", __dir__)
  def ansible_provision(install, playbook)
    <<-SHELL
      echo "Checking if Ansible is installed..."
      if ! command -v ansible >/dev/null 2>&1; then
        echo "Installing Ansible."
        #{install}
      else
        echo "Ansible already installed"
      fi
      ansible-playbook -i "127.0.0.1," -c local #{playbook}
    SHELL
  end
  
  # VM config block - consumes vm_settings from above
  vm_settings.each do |vm|
    config.vm.define vm[:name] do |node|
      node.vm.box = vm[:box]
      node.vm.hostname = vm[:name]

      node.vm.provider "hyperv" do |h|
        h.vmname = vm[:name]
        h.memory = vm[:memory]
        h.cpus = vm[:cpus]
        h.enable_checkpoints = false
      end

      node.vm.provision "file", source: local_ssh_key, destination: "/home/vagrant/id_rsa.pub"
      node.vm.provision "file", source: ansible_playbook, destination: vm[:ansible_playbook]
      node.vm.provision "shell", inline: create_user_shell(vm[:user_name])
      node.vm.provision "shell", inline: ansible_provision(vm[:ansible_install], vm[:ansible_playbook])
    end
  end
end
